{
	"info": {
		"_postman_id": "914c636e-df99-497f-8a50-3df27c8e7d1b",
		"name": "Dating Apps",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"data.token\");",
									"    pm.response.to.have.jsonBody(\"data.refresh_token\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"s3Cr3Tk3y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/sessions/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"sessions",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"confirm_password\": \"s3Cr3Tk3y\",\n  \"email\": \"test@example.com\",\n  \"password\": \"s3Cr3Tk3y\",\n  \"username\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/sessions/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"sessions",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "ME",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"data.username\");",
									"    pm.response.to.have.jsonBody(\"data.email\");",
									"    pm.response.to.have.jsonBody(\"data.full_name\");",
									"    pm.response.to.have.jsonBody(\"data.age\");",
									"    pm.response.to.have.jsonBody(\"data.gender\");",
									"    pm.response.to.have.jsonBody(\"data.is_verified\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"age\": 18,\n  \"full_name\": \"test\",\n  \"gender\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/users/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subscribe Premium",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"GRATIS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/users/subscription",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"subscription"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJvd25lcl9pZCI6IjRmNjJlMTZkLTkxZGYtNGRlMi04OWM2LTQzM2IwMzUyYjgzNiIsImV4cCI6MTY4ODk2MjQ5NiwiaWF0IjoxNjg4OTU2NDk2LCJpc3MiOiJkYXRpbmctYXBwcyIsInN1YiI6IjRmNjJlMTZkLTkxZGYtNGRlMi04OWM2LTQzM2IwMzUyYjgzNiJ9.xhHfGuO5409TbYNuZ4uIdfYr6ES2-bBDl2lGTIP0e6A",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Datings",
			"item": [
				{
					"name": "Get Profile to Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"data.profiles\");",
									"    pm.response.to.have.jsonBody(\"data.count\");",
									"    pm.response.to.have.jsonBody(\"data.page\");",
									"    pm.response.to.have.jsonBody(\"data.pageSize\");",
									"    pm.response.to.have.jsonBody(\"data.totalPage\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/datings/swipe?size=15&page=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"datings",
								"swipe"
							],
							"query": [
								{
									"key": "size",
									"value": "15"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Swipe Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Status code test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Response body test",
									"pm.test(\"Response contains valid data\", function () {",
									"    pm.response.to.have.jsonBody(\"message\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"is_like\": true,\n  \"profile_id\": \"6f9cdf8e-ebe7-4f04-82d5-f4fa5251a369\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/datings/swipe",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"datings",
								"swipe"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJvd25lcl9pZCI6IjRmNjJlMTZkLTkxZGYtNGRlMi04OWM2LTQzM2IwMzUyYjgzNiIsImV4cCI6MTY4ODk2MjQ5NiwiaWF0IjoxNjg4OTU2NDk2LCJpc3MiOiJkYXRpbmctYXBwcyIsInN1YiI6IjRmNjJlMTZkLTkxZGYtNGRlMi04OWM2LTQzM2IwMzUyYjgzNiJ9.xhHfGuO5409TbYNuZ4uIdfYr6ES2-bBDl2lGTIP0e6A",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Status code test",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Response body test",
							"pm.test(\"Response contains valid data\", function () {",
							"    pm.response.to.have.jsonBody(\"message\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"health"
					]
				}
			},
			"response": []
		}
	]
}